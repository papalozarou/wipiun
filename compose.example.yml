# -----------------------------------------------------------------------------
# All variables are set in the matching ".env" file.
# -----------------------------------------------------------------------------
version: "3.9"


# ------------------------------------------------------------------------------
# Docker extension fields for default build variables.
# 
# N.B.
# As of compose v2.17.x extension parsing has been improved/corrected and all
# extension references at the same level must be done in a single line as per:
#
# https://github.com/docker/compose/issues/10407
# ------------------------------------------------------------------------------
x-build-args:
  &default-build-args
  IMG_PFX: ${IMG_PFX}
  ALP_VER: ${ALP_VER}
  C_USR: ${C_USR}
  C_GRP: ${C_GRP}
  C_USR_DIR: ${C_USR_DIR}
# ------------------------------------------------------------------------------
# Docker extension fields for default user, used with third party containers.
# ------------------------------------------------------------------------------
x-user:
  &default-user
  user: ${C_UID}:${C_GID}
# ------------------------------------------------------------------------------
# Docker extension fields for environment variables. This is used by all
# containers to ensure that the timezone, UID, and GID are the same.
# ------------------------------------------------------------------------------
x-env:
  &default-env
  TZ: ${H_TZ}  
  PUID: ${C_UID}
  GUID: ${C_GID}
# ------------------------------------------------------------------------------
# Docker extension fields for default security options that disallow privilege
# escalation inside a container.
# ------------------------------------------------------------------------------
x-security:
  &default-security
  security_opt:
    - no-new-privileges:true

services:
# -----------------------------------------------------------------------------
# The "wireguard" container runs the VPN service and depends on "pihole" for 
# adblocking and "unbound" for DNS. It's "dns" values point to the "pihole" 
# and "unbound" containers.
# 
# There are several environment variables:
# * "PUID" – set to match the host user id.
# * "PGID" – set to match the host user's group id .
# * "TZ" – set to desired location, and should match any other containers.
# * "SERVER_PORT" – port to listen on, must match the later exposed port value.
# * "SERVER_URL" – the URL of the VPN server.
# * "PEERS" – the number of clients to generate files for, which can be a 
#   number or a list of names. Incremenmt, or add names, and rerun the 
#   container to add more.
# * "PEER_DNS" – this must point to the "pihole" container.
# * "INTERNAL_SUBNET" – the subnet the clients will connect to.
# * "ALLOWED_IPS" – The IPs/Ranges that the peers will be able to reach using 
#   the VPN connection. If not specified the default value is: 
#   '0.0.0.0/0, ::0/0' which will cause ALL traffic to route through the VPN.
#   To enable split tunnelling all private addresses have been set.
#
# "cap_add" values are necessary for the container to use the host network from
# the private network the services are connected to.
#
# An ipv4 address is specified to allow other services to interact with this
# container. This address must be within the subnet mask defined in 
# "public", under the docker "networks".
# -----------------------------------------------------------------------------
  wireguard:
    image: ${IMG_PFX}/wireguard-alpine
    container_name: wireguard
    build:
      context: ./wireguard
      args:
        <<: *default-build-args
    environment:
      <<: *default-env
      - SERVER_PORT=00000
      - SERVER_URL=${H_URL}
      - CLIENTS=${C_WGD_CLIENTS}
      - CLIENT_DNS=${C_NW_PUBLIC}.3
      - INTERNAL_SUBNET=${C_NW_VPN}.0
      - ALLOWED_IPS=1.0.0.0/8, 2.0.0.0/8, 3.0.0.0/8, 4.0.0.0/6, 8.0.0.0/7, 11.0.0.0/8, 12.0.0.0/6, 16.0.0.0/4, 32.0.0.0/3, 64.0.0.0/2, 128.0.0.0/3, 160.0.0.0/5, 168.0.0.0/6, 172.0.0.0/12, 172.32.0.0/11, 172.64.0.0/10, 172.128.0.0/9, 173.0.0.0/8, 174.0.0.0/7, 176.0.0.0/4, 192.0.0.0/9, 192.128.0.0/11, 192.160.0.0/13, 192.169.0.0/16, 192.170.0.0/15, 192.172.0.0/14, 192.176.0.0/12, 192.192.0.0/10, 193.0.0.0/8, 194.0.0.0/7, 196.0.0.0/6, 200.0.0.0/5, 208.0.0.0/4, 10.5.0.3/32
    volumes:
      - ./wireguard/config:/config
      - /lib/modules:/lib/modules
    ports:
      - "00000:51820/udp"
    dns:
      - ${C_NW_PUBLIC}.3
      - ${C_NW_PUBLIC}.4
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
    networks:
      public:
        ipv4_address: ${C_NW_PUBLIC}.2
    depends_on:
      - pihole
      - unbound
    <<: *default-security
    restart: unless-stopped

# -----------------------------------------------------------------------------
# The "pihole" container blocks adverts, trackers and annoyances. It creates
# two volumes on the host that house it's data:
# 1. "etc-dnsmasq.d"
# 2. "etc-pihole"
#
# "ServerIP" points to pihole as does the loopback in "dns". "DNS1" and the  
# second "dns" entry points to the unbound container.
#
# An ipv4 address is specified to allow other services to interact with this
# container. This address must be within the subnet mask defined in 
# "public", under the docker "networks".
# -----------------------------------------------------------------------------
  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    environment:
      - TZ=Europe/London
      - ServerIP=${C_NW_PUBLIC}.3
      - DNS1=${C_NW_PUBLIC}.4
      - DNS2=no
    dns:
      - 127.0.0.1
      - ${C_NW_PUBLIC}.4
    expose:
      - 53/tcp
      - 53/udp
      - 80/tcp
      - 67/udp
    volumes:
      - "./pihole/etc-pihole:/etc/pihole"
      - "./pihole/etc-dnsmasq.d:/etc/dnsmasq.d"
    networks:
      public:
        ipv4_address: ${C_NW_PUBLIC}.3
    depends_on:
      - unbound
    <<: *default-security
    restart: unless-stopped

# -----------------------------------------------------------------------------
# The "unbound" container is a fully recursive local DNS server. Data is stored 
# in the "unbound_conf" volume.
#
# All requests are handled by "unbound" using a "root.hints" file. This file is
# periodically updated via a cronjob on the host.
#
# An ipv4 address is specified to allow other services to interact with this
# container. This address must be within the subnet mask defined in 
# "public", under the docker "networks".
# -----------------------------------------------------------------------------
  unbound:
    image: ${IMG_PFX}/unbound-alpine
    container_name: unbound
    build:
      context: ./unbound
      args:
        <<: *default-build-args
    expose:
      - 53/tcp
      - 53/udp
    volumes:
      - ./unbound/config:/etc/unbound
    networks:
      public:
        ipv4_address: ${C_NW_PUBLIC}.4
    <<: *default-security
    restart: unless-stopped

# -----------------------------------------------------------------------------
# One network is defined:
#
# 1. "public" – for "wireguard", "pihole" and "unbound"
#
# A minimal range of IP addresses is specified, in CIDR notation, to cover the 
# number of services that will be connected:
# 
# 1. "public" – ${C_NW_PUBLIC}.1 to ${C_NW_PUBLIC}.6
# 
# N.B.
# Docker will automatically take the first IP address in each range.
# -----------------------------------------------------------------------------
networks:
  public:
    ipam:
      config:
        - subnet: ${C_NW_PUBLIC}.0/29